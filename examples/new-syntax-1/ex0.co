// int
a = 10
a: int = 10

// bytes
a = b'123'
a: bytes = b''

// str - utf8 string 
a = 'abc123'
a: str = 'abc123'

// list
a = [0, 1, 'a']
a: list = [0, 1, 'a']
a: list[int] = [0, 1, 2]

// dict
d = {.x: 10, .y: -0.1, 'z': 20}
d: dict = {.x: 10, .y: -0.1, 'z': 20}
d: dict[x: int, y: float, z: int] = {.x: 10, .y: -0.1, 'z': 20}
d: dict[str][x: int, y: float, z: int] = {.x: 10, .y: -0.1, 'z': 20}

// blocks
-> { 0 }
-> int { 0 }

// args
a: dict = (x: int, y: int=20)
a: dict = {.x: int, .y: int=20}
a: dict = {.x: int, .y: int=20}

// forming function out of args and block
b = -> { x + y }
f0: fn[[int, int], int] = a b
f0: fn[[int, int], int] = a -> int { x + y }
f0: fn[[int, int], int] = (x: int, y: int=20) -> int { x + y }
f0: fn[[int, int], int] = {.x: int, .y: int=20} -> int { x + y }

// function calls
r0: int = f(10, 20)
r0: int = f(10, y=20)
r0: int = f(10, *[20])
r0: int = f(10, **{.y: 20})
r0: int = f(*[10, 20])
r0: int = f(*[10, 20], **{})
r0: int = f(*[10], **{.y: 20})
r0: int = f(*[], **{.x: 10, .y: 20})
r0: int = f(**{.x: 10, .y: 20})
