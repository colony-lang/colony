
//
// Object / Type
//
Object: MutDict = MutDict()
Type: MutDict = MutDict()

// Object
Object.__type__ = Type
Object.__bases__ = []
Object.__name__ = 'Object'

// Type
Type.__type__ = Type
Type.__bases__ = [Object]
Type.__name__ = 'Object'

// Object
Object.__fields__ = {}

Object.__funcs__ = {
    .__init__: (self, [args], {kwargs}) -> Object {
        // set fields
    }
}

// Type
Type.__fields__ = {}

Type.__funcs__ = {

}

// Object / Type
Object.inplace_imut()
Type.inplace_imut()

//
// user-defined types
//
A: Type = Type [Object] 'A' {
    .x: int,
    .y: int
} {
    .__init__: (self, x: int=0, y: int=0) -> A {
        self = {...self, .x: x, .y: y}
        self
    },

    .__add__: (self, other: A) -> A {
        res: A = A {.x: self.x + other.x, .y: self.y + other.y}
        res
    },

    .__sub__: (self, other: A) -> A {
        res: A = A {.x: self.x - other.x, .y: self.y - other.y}
        res
    },
}

a0: A = A(1, ...{y: 2})
a1: A = A(x: 1, y: 2)
a2: A = a0 + a1
